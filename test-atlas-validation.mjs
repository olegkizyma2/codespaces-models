#!/usr/bin/env node
/**
 * –¢–µ—Å—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó ATLAS Provider
 */

import { ATLASProvider } from './providers/atlas.mjs';

console.log('üß™ –¢–µ—Å—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó ATLAS Provider\n');

// Test 1: –ë–µ–∑ —Ç–æ–∫–µ–Ω—ñ–≤ (–º–∞—î –ø—Ä–æ–≤–∞–ª–∏—Ç–∏—Å—å)
console.log('='.repeat(60));
console.log('Test 1: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –±–µ–∑ —Ç–æ–∫–µ–Ω—ñ–≤');
console.log('='.repeat(60));

const atlas1 = new ATLASProvider({ apiKey: 'dummy' });
const validation1 = atlas1.validate();

console.log('  –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:');
console.log('    Valid:', validation1.valid);
console.log('    Tokens count:', atlas1.tokens.length);

if (!validation1.valid) {
  console.log('  ‚ùå –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞ (–æ—á—ñ–∫—É–≤–∞–Ω–æ):');
  validation1.errors.forEach((error, idx) => {
    console.log(`    ${idx + 1}. ${error}`);
  });
} else {
  console.log('  ‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π–¥–µ–Ω–∞');
}
console.log();

// Test 2: –ó dummy GITHUB_TOKEN (–Ω–µ —Ñ–æ—Ä–º–∞—Ç—É gho_)
console.log('='.repeat(60));
console.log('Test 2: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º');
console.log('='.repeat(60));

process.env.GITHUB_TOKEN_TEST = 'invalid_token_format';
const atlas2 = new ATLASProvider({ apiKey: 'dummy' });
const validation2 = atlas2.validate();

console.log('  –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:');
console.log('    Valid:', validation2.valid);
console.log('    Tokens count:', atlas2.tokens.length);

if (!validation2.valid) {
  console.log('  ‚ùå –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞ (–æ—á—ñ–∫—É–≤–∞–Ω–æ):');
  validation2.errors.forEach((error, idx) => {
    console.log(`    ${idx + 1}. ${error}`);
  });
} else {
  console.log('  ‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π–¥–µ–Ω–∞');
}
console.log();

// Test 3: –ó –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º —Ç–æ–∫–µ–Ω—É
console.log('='.repeat(60));
console.log('Test 3: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ –≤–∞–ª—ñ–¥–Ω–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º —Ç–æ–∫–µ–Ω—É');
console.log('='.repeat(60));

process.env.GITHUB_TOKEN = 'gho_test_token_12345678901234567890';
const atlas3 = new ATLASProvider({ apiKey: process.env.GITHUB_TOKEN });
const validation3 = atlas3.validate();

console.log('  –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:');
console.log('    Valid:', validation3.valid);
console.log('    Tokens count:', atlas3.tokens.length);

if (!validation3.valid) {
  console.log('  ‚ùå –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞:');
  validation3.errors.forEach((error, idx) => {
    console.log(`    ${idx + 1}. ${error}`);
  });
} else {
  console.log('  ‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π–¥–µ–Ω–∞!');
  console.log('  –¢–æ–∫–µ–Ω–∏:');
  atlas3.tokens.forEach((token, idx) => {
    console.log(`    ${idx + 1}. ${token.key}: ${token.value.substring(0, 10)}...`);
  });
}
console.log();

// Test 4: –ú–Ω–æ–∂–∏–Ω–Ω—ñ —Ç–æ–∫–µ–Ω–∏
console.log('='.repeat(60));
console.log('Test 4: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ –º–Ω–æ–∂–∏–Ω–Ω–∏–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏');
console.log('='.repeat(60));

process.env.GITHUB_TOKEN = 'gho_token_1';
process.env.GITHUB_TOKEN_2 = 'gho_token_2';
process.env.GITHUB_TOKEN_3 = 'gho_token_3';

const atlas4 = new ATLASProvider({ apiKey: process.env.GITHUB_TOKEN });
const validation4 = atlas4.validate();

console.log('  –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:');
console.log('    Valid:', validation4.valid);
console.log('    Tokens count:', atlas4.tokens.length);

if (!validation4.valid) {
  console.log('  ‚ùå –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞:');
  validation4.errors.forEach((error, idx) => {
    console.log(`    ${idx + 1}. ${error}`);
  });
} else {
  console.log('  ‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π–¥–µ–Ω–∞!');
  console.log('  –í—Å—ñ —Ç–æ–∫–µ–Ω–∏:');
  atlas4.tokens.forEach((token, idx) => {
    console.log(`    ${idx + 1}. ${token.key}: ${token.value}`);
  });
}
console.log();

console.log('='.repeat(60));
console.log('üìä –ü—ñ–¥—Å—É–º–æ–∫');
console.log('='.repeat(60));
console.log(`Test 1: ${!validation1.valid ? '‚úÖ' : '‚ùå'} (–±–µ–∑ —Ç–æ–∫–µ–Ω—ñ–≤ - –º–∞—î –ø—Ä–æ–≤–∞–ª–∏—Ç–∏—Å—å)`);
console.log(`Test 2: ${!validation2.valid ? '‚úÖ' : '‚ùå'} (–Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç - –º–∞—î –ø—Ä–æ–≤–∞–ª–∏—Ç–∏—Å—å)`);
console.log(`Test 3: ${validation3.valid ? '‚úÖ' : '‚ùå'} (1 –≤–∞–ª—ñ–¥–Ω–∏–π —Ç–æ–∫–µ–Ω)`);
console.log(`Test 4: ${validation4.valid ? '‚úÖ' : '‚ùå'} (3 –≤–∞–ª—ñ–¥–Ω—ñ —Ç–æ–∫–µ–Ω–∏)`);
console.log();

// Cleanup
delete process.env.GITHUB_TOKEN;
delete process.env.GITHUB_TOKEN_2;
delete process.env.GITHUB_TOKEN_3;
delete process.env.GITHUB_TOKEN_TEST;

console.log('‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
