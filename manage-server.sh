#!/bin/bash

# üöÄ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è OpenAI Proxy Server –∑ Token Rotation
# –ú–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ –∑ –±—É–¥—å-—è–∫–æ—ó –ø–∞–ø–∫–∏!

# –®–ª—è—Ö –¥–æ –ø—Ä–æ–µ–∫—Ç—É
PROJECT_DIR="/Users/dev/Documents/NIMDA/codespaces-models"
APP_NAME="openai-proxy"

# –ö–æ–ª—å–æ—Ä–∏
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É
print_status() {
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${GREEN}$1${NC}"
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ PM2
check_pm2() {
    if ! command -v pm2 &> /dev/null; then
        echo -e "${RED}‚ùå PM2 –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!${NC}"
        echo "–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å: npm install -g pm2"
        exit 1
    fi
}

case "${1:-help}" in
    start)
        print_status "üöÄ –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê"
        cd "$PROJECT_DIR" || exit 1
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ
        if pm2 describe "$APP_NAME" &> /dev/null; then
            echo -e "${YELLOW}‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ!${NC}"
            echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ: $0 restart"
            exit 0
        fi
        
        echo "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: $PROJECT_DIR"
        echo "üîß –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è: ecosystem.config.cjs"
        echo ""
        
        pm2 start ecosystem.config.cjs
        
        echo ""
        sleep 2
        
        echo -e "${GREEN}‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É...${NC}"
        pm2 status | grep "$APP_NAME"
        
        echo ""
        echo -e "${GREEN}üìù –õ–æ–≥–∏ –∑–∞–ø—É—Å–∫—É:${NC}"
        pm2 logs "$APP_NAME" --lines 5 --nostream
        
        echo ""
        echo -e "${BLUE}üí° –ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:${NC}"
        echo "  $0 status    - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"
        echo "  $0 logs      - –õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ"
        echo "  $0 tokens    - –°—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω—ñ–≤"
        ;;

    stop)
        print_status "‚èπÔ∏è  –ó–£–ü–ò–ù–ö–ê –°–ï–†–í–ï–†–ê"
        cd "$PROJECT_DIR" || exit 1
        pm2 stop "$APP_NAME"
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –∑—É–ø–∏–Ω–µ–Ω–æ${NC}"
        ;;

    restart)
        print_status "üîÑ –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê"
        cd "$PROJECT_DIR" || exit 1
        
        echo "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: $PROJECT_DIR"
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î–º–æ $APP_NAME..."
        echo ""
        
        pm2 restart "$APP_NAME"
        
        sleep 2
        
        echo ""
        echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å –ø—ñ—Å–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É:${NC}"
        pm2 status | grep "$APP_NAME"
        
        echo ""
        echo -e "${GREEN}üìù –û—Å—Ç–∞–Ω–Ω—ñ –ª–æ–≥–∏:${NC}"
        pm2 logs "$APP_NAME" --lines 10 --nostream | tail -15
        
        echo ""
        echo -e "${GREEN}üîë –°—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω—ñ–≤:${NC}"
        curl -s http://localhost:4000/v1/tokens/stats 2>/dev/null | jq -r '
            "–ê–∫—Ç–∏–≤–Ω–∏–π —Ç–æ–∫–µ–Ω: \(.current_token)",
            "–í—Å—å–æ–≥–æ —Ç–æ–∫–µ–Ω—ñ–≤: \(.total_tokens)",
            "",
            (.tokens[] | "  \(if .isCurrent then "üü¢" else "‚ö™" end) \(.key): –ø–æ–º–∏–ª–æ–∫=\(.failures), –±–ª–æ–∫=\(.blocked)")
        ' || echo "‚ö†Ô∏è  API —â–µ –Ω–µ –≥–æ—Ç–æ–≤–µ, –ø–æ—á–µ–∫–∞–π—Ç–µ —Å–µ–∫—É–Ω–¥—É..."
        ;;

    reload)
        print_status "‚ôªÔ∏è  –ü–û–í–ù–ò–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö (–∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º .env)"
        cd "$PROJECT_DIR" || exit 1
        
        echo "üîÑ –ó—É–ø–∏–Ω—è—î–º–æ —Å–µ—Ä–≤–µ—Ä..."
        pm2 stop "$APP_NAME" 2>/dev/null || true
        
        echo "üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–æ–≤—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é..."
        pm2 start ecosystem.config.cjs
        
        sleep 2
        
        echo ""
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ –∑ –Ω–æ–≤–æ—é –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é${NC}"
        pm2 status | grep "$APP_NAME"
        
        echo ""
        echo -e "${GREEN}üîë –¢–æ–∫–µ–Ω–∏ –ø—ñ—Å–ª—è reload:${NC}"
        pm2 logs "$APP_NAME" --lines 5 --nostream | grep "TOKEN-ROTATOR"
        ;;

    status|s)
        print_status "üìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–ò"
        cd "$PROJECT_DIR" || exit 1
        
        echo -e "${BLUE}PM2 Process:${NC}"
        pm2 status | grep -E "id|$APP_NAME|‚îÄ‚îÄ‚îÄ"
        
        echo ""
        echo -e "${BLUE}üîë –¢–æ–∫–µ–Ω–∏:${NC}"
        curl -s http://localhost:4000/v1/tokens/stats 2>/dev/null | jq -r '
            "–ê–∫—Ç–∏–≤–Ω–∏–π: \(.current_token)",
            "–í—Å—å–æ–≥–æ: \(.total_tokens)",
            "",
            "–°—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω—ñ–≤:",
            (.tokens[] | "  \(if .isCurrent then "üü¢" else "‚ö™" end) \(.key)",
             "     –ë–ª–æ–∫–æ–≤–∞–Ω–∏–π: \(.blocked)",
             "     –ü–æ–º–∏–ª–æ–∫: \(.failures)",
             "     –û—Å—Ç–∞–Ω–Ω—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: \(.lastUsed // "–Ω—ñ–∫–æ–ª–∏")",
             ""
            )
        ' || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î"
        
        echo ""
        echo -e "${BLUE}üíæ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤:${NC}"
        pm2 describe "$APP_NAME" 2>/dev/null | grep -E "memory|cpu|restart" | head -3
        ;;

    logs|l)
        print_status "üìù –õ–û–ì–ò –í –†–ï–ê–õ–¨–ù–û–ú–£ –ß–ê–°–Ü"
        cd "$PROJECT_DIR" || exit 1
        echo "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –≤–∏—Ö–æ–¥—É"
        echo ""
        pm2 logs "$APP_NAME"
        ;;

    errors|e)
        print_status "‚ùå –û–°–¢–ê–ù–ù–Ü –ü–û–ú–ò–õ–ö–ò"
        cd "$PROJECT_DIR" || exit 1
        pm2 logs "$APP_NAME" --err --lines 30 --nostream
        ;;

    tokens|t)
        print_status "üîë –°–¢–ê–¢–£–° –¢–û–ö–ï–ù–Ü–í"
        
        echo -e "${BLUE}üìä –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:${NC}"
        curl -s http://localhost:4000/v1/tokens/stats | jq '.' || echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ"
        
        echo ""
        echo -e "${BLUE}üí° –®–≤–∏–¥–∫—ñ –¥—ñ—ó –∑ —Ç–æ–∫–µ–Ω–∞–º–∏:${NC}"
        echo "  curl -X POST http://localhost:4000/v1/tokens/rotate     # –†—É—á–Ω–∞ —Ä–æ—Ç–∞—Ü—ñ—è"
        echo "  curl -X POST http://localhost:4000/v1/tokens/reset-stats # –°–∫–∏–Ω—É—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
        ;;

    flush)
        print_status "üóëÔ∏è  –û–ß–ò–°–¢–ö–ê –õ–û–ì–Ü–í"
        cd "$PROJECT_DIR" || exit 1
        pm2 flush "$APP_NAME"
        echo -e "${GREEN}‚úÖ –õ–æ–≥—ñ –æ—á–∏—â–µ–Ω–æ${NC}"
        ;;

    monit|m)
        print_status "üìä –ú–û–ù–Ü–¢–û–†–ò–ù–ì PM2"
        cd "$PROJECT_DIR" || exit 1
        echo "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –≤–∏—Ö–æ–¥—É"
        pm2 monit
        ;;

    test)
        print_status "üß™ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –°–ò–°–¢–ï–ú–ò"
        cd "$PROJECT_DIR" || exit 1
        
        echo "1Ô∏è‚É£  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ API..."
        if curl -s http://localhost:4000/health &> /dev/null; then
            echo -e "${GREEN}‚úÖ API –¥–æ—Å—Ç—É–ø–Ω–µ${NC}"
        else
            echo -e "${RED}‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ${NC}"
            exit 1
        fi
        
        echo ""
        echo "2Ô∏è‚É£  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω—ñ–≤..."
        tokens=$(curl -s http://localhost:4000/v1/tokens/stats | jq -r '.total_tokens')
        if [ "$tokens" -gt 0 ]; then
            echo -e "${GREEN}‚úÖ Token Rotator –ø—Ä–∞—Ü—é—î ($tokens —Ç–æ–∫–µ–Ω—ñ–≤)${NC}"
        else
            echo -e "${RED}‚ùå Token Rotator –Ω–µ –ø—Ä–∞—Ü—é—î${NC}"
        fi
        
        echo ""
        echo "3Ô∏è‚É£  –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç..."
        response=$(curl -s -X POST http://localhost:4000/v1/chat/completions \
            -H "Content-Type: application/json" \
            -d '{"model":"gpt-4o-mini","messages":[{"role":"user","content":"Hi"}],"max_tokens":5}' \
            2>/dev/null)
        
        if echo "$response" | jq -e '.choices' > /dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ –ó–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–∏–π${NC}"
        else
            error=$(echo "$response" | jq -r '.error.message // "Unknown"')
            echo -e "${YELLOW}‚ö†Ô∏è  –í—ñ–¥–ø–æ–≤—ñ–¥—å: $error${NC}"
        fi
        
        echo ""
        echo -e "${GREEN}‚úÖ –¢–µ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ${NC}"
        ;;

    info|i)
        print_status "‚ÑπÔ∏è  –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ü–†–û –°–ò–°–¢–ï–ú–£"
        echo -e "${BLUE}üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è:${NC} $PROJECT_DIR"
        echo -e "${BLUE}üîß –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:${NC} ecosystem.config.cjs"
        echo -e "${BLUE}üìù –õ–æ–≥–∏:${NC} $PROJECT_DIR/logs/"
        echo -e "${BLUE}üåê API URL:${NC} http://localhost:4000"
        echo -e "${BLUE}üìä API Endpoints:${NC}"
        echo "  ‚Ä¢ GET  /v1/tokens/stats"
        echo "  ‚Ä¢ POST /v1/tokens/rotate"
        echo "  ‚Ä¢ POST /v1/tokens/reset-stats"
        echo "  ‚Ä¢ POST /v1/chat/completions"
        echo "  ‚Ä¢ GET  /v1/models"
        echo ""
        echo -e "${BLUE}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è:${NC}"
        echo "  ‚Ä¢ TOKEN_ROTATION.md"
        echo "  ‚Ä¢ THROTTLING_GUIDE.md"
        echo "  ‚Ä¢ TOKEN_ROTATION_QUICKSTART.md"
        ;;

    help|h|*)
        cat << 'HELP'

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë        üöÄ OpenAI Proxy Server - –°–∏—Å—Ç–µ–º–∞ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è            ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

–í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø: manage-server.sh <–∫–æ–º–∞–Ω–¥–∞>

üìã –û–°–ù–û–í–ù–Ü –ö–û–ú–ê–ù–î–ò:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
  start          –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä
  stop           –ó—É–ø–∏–Ω–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä
  restart        –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä (—à–≤–∏–¥–∫–æ)
  reload         –ü–æ–≤–Ω–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º .env
  status, s      –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º–∏
  
üìù –õ–û–ì–ò –¢–ê –ú–û–ù–Ü–¢–û–†–ò–ù–ì:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
  logs, l        –õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
  errors, e      –¢—ñ–ª—å–∫–∏ –ø–æ–º–∏–ª–∫–∏
  flush          –û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—ñ –ª–æ–≥–∏
  monit, m       PM2 –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ (—ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π)
  
üîë –¢–û–ö–ï–ù–ò:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
  tokens, t      –°—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω—ñ–≤
  
üß™ –Ü–ù–®–ï:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
  test           –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç–µ—Å—Ç–∏
  info, i        –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–∏—Å—Ç–µ–º—É
  help, h        –¶—è –¥–æ–≤—ñ–¥–∫–∞

üí° –ü–†–ò–ö–õ–ê–î–ò:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
  manage-server.sh start       # –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä
  manage-server.sh restart     # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏
  manage-server.sh status      # –°—Ç–∞—Ç—É—Å
  manage-server.sh logs        # –î–∏–≤–∏—Ç–∏—Å—å –ª–æ–≥–∏
  manage-server.sh tokens      # –°—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω—ñ–≤

üìö –ö–û–õ–ò –í–ò–ö–û–†–ò–°–¢–û–í–£–í–ê–¢–ò:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
  restart  ‚Üí –ó–≤–∏—á–∞–π–Ω–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ (–Ω–∞–π—á–∞—Å—Ç—ñ—à–µ)
  reload   ‚Üí –ü—ñ—Å–ª—è –∑–º—ñ–Ω–∏ .env –∞–±–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
  flush    ‚Üí –ö–æ–ª–∏ –ª–æ–≥–∏ –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫—ñ
  test     ‚Üí –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ—Å–ª—è –∑–º—ñ–Ω

üåê WEB –Ü–ù–¢–ï–†–§–ï–ô–°–ò:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
  http://localhost:4000         # –ì–æ–ª–æ–≤–Ω–∞ (Simple Chat)
  http://localhost:4000/monitor # –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥
  http://localhost:4000/classic # Classic UI
  http://localhost:4000/health  # Health check

HELP
        ;;
esac
