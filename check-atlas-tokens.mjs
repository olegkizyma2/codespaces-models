#!/usr/bin/env node

/**
 * Quick check of ATLAS token rotation status
 */

import 'dotenv/config';
import { ATLASProvider } from './providers/atlas.mjs';

console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω—ñ–≤ ATLAS\n');

// Check environment
console.log('üìã –¢–æ–∫–µ–Ω–∏ –≤ .env:');
const envTokens = [
  'GITHUB_TOKEN',
  'GITHUB_TOKEN_2', 
  'GITHUB_TOKEN_3',
  'GITHUB_TOKEN_4'
];

envTokens.forEach(key => {
  const value = process.env[key];
  if (value) {
    console.log(`  ‚úÖ ${key}: ${value.substring(0, 10)}...`);
  } else {
    console.log(`  ‚ùå ${key}: –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
  }
});

console.log('\nüöÄ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è ATLAS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞:\n');

try {
  const atlas = ATLASProvider.fromEnv();
  
  console.log(`–ü—Ä–æ–≤–∞–π–¥–µ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!`);
  console.log(`–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—ñ–≤: ${atlas.tokens.length}`);
  console.log(`–ü–æ—Ç–æ—á–Ω–∏–π —ñ–Ω–¥–µ–∫—Å: ${atlas.currentTokenIndex}`);
  
  console.log('\nüìä –°–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω—ñ–≤:');
  atlas.tokens.forEach((token, idx) => {
    console.log(`  ${idx + 1}. ${token.key}: ${token.value.substring(0, 10)}...`);
    console.log(`     –ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π: ${token.blocked}`);
    console.log(`     –ü–æ–º–∏–ª–æ–∫: ${token.failures}`);
  });
  
  console.log('\n‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è:');
  const validation = atlas.validate();
  console.log(`  Valid: ${validation.valid}`);
  if (!validation.valid) {
    console.log('  –ü–æ–º–∏–ª–∫–∏:');
    validation.errors.forEach(err => console.log(`    - ${err}`));
  }
  
  console.log('\nüéØ –ú–µ—Ç–∞–¥–∞–Ω—ñ:');
  const metadata = ATLASProvider.metadata();
  console.log(`  –ú–æ–¥–µ–ª–µ–π: ${metadata.knownModels.length}`);
  console.log(`  –î–µ—Ñ–æ–ª—Ç–Ω–∞ –º–æ–¥–µ–ª—å: ${metadata.defaultModel}`);
  
} catch (error) {
  console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
  if (error.code) {
    console.error(`   –ö–æ–¥ –ø–æ–º–∏–ª–∫–∏: ${error.code}`);
  }
}
