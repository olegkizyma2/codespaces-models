#!/bin/bash

# üîß Token Rotation - Emergency Commands
# –®–≤–∏–¥–∫—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º

echo "üÜò Token Rotation - –ê–≤–∞—Ä—ñ–π–Ω—ñ –∫–æ–º–∞–Ω–¥–∏"
echo "===================================="
echo ""

case "${1:-help}" in
  status|s)
    echo "üìä –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å:"
    pm2 status | grep openai-proxy
    echo ""
    curl -s http://localhost:4000/v1/tokens/stats 2>/dev/null | jq -r '
      "–ê–∫—Ç–∏–≤–Ω–∏–π —Ç–æ–∫–µ–Ω: \(.current_token)",
      "–í—Å—å–æ–≥–æ —Ç–æ–∫–µ–Ω—ñ–≤: \(.total_tokens)",
      "",
      "–î–µ—Ç–∞–ª—ñ:",
      (.tokens[] | "  \(.key): \(if .isCurrent then "‚úì –ê–ö–¢–ò–í–ù–ò–ô" else "  –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π" end) | –±–ª–æ–∫: \(.blocked) | –ø–æ–º–∏–ª–æ–∫: \(.failures)")
    ' || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π"
    ;;

  rotate|r)
    echo "üîÑ –í–∏–∫–æ–Ω—É—é —Ä–æ—Ç–∞—Ü—ñ—é —Ç–æ–∫–µ–Ω–∞..."
    result=$(curl -s -X POST http://localhost:4000/v1/tokens/rotate 2>/dev/null)
    echo "$result" | jq '.' || echo "‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–æ—Ç–∞—Ü—ñ—ó"
    ;;

  reset)
    echo "üîÑ –°–∫–∏–¥–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–∫–µ–Ω—ñ–≤..."
    curl -s -X POST http://localhost:4000/v1/tokens/reset-stats 2>/dev/null | jq '.'
    echo ""
    echo "‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∫–∏–Ω—É—Ç–æ"
    ;;

  restart)
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–µ—Ä..."
    pm2 restart openai-proxy
    sleep 3
    echo ""
    echo "üìä –ù–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å:"
    pm2 status | grep openai-proxy
    echo ""
    echo "üìù –û—Å—Ç–∞–Ω–Ω—ñ –ª–æ–≥–∏:"
    pm2 logs openai-proxy --lines 10 --nostream
    ;;

  logs|l)
    lines="${2:-30}"
    echo "üìù –û—Å—Ç–∞–Ω–Ω—ñ $lines —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—ñ–≤:"
    pm2 logs openai-proxy --lines "$lines" --nostream
    ;;

  errors|e)
    echo "‚ùå –û—Å—Ç–∞–Ω–Ω—ñ –ø–æ–º–∏–ª–∫–∏ 429:"
    pm2 logs openai-proxy --err --lines 50 --nostream | grep -A 5 "429\|TOKEN-ROTATOR" | tail -30
    ;;

  watch|w)
    echo "üëÅÔ∏è  –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Ç–æ–∫–µ–Ω—ñ–≤ (–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 5 —Å–µ–∫, Ctrl+C –¥–ª—è –≤–∏—Ö–æ–¥—É)..."
    echo ""
    while true; do
      clear
      echo "üîÑ Token Rotation Monitor - $(date '+%H:%M:%S')"
      echo "=========================================="
      echo ""
      curl -s http://localhost:4000/v1/tokens/stats 2>/dev/null | jq -r '
        "–ê–∫—Ç–∏–≤–Ω–∏–π: \(.current_token)",
        "",
        (.tokens[] | "  \(.key):",
         "    –ê–∫—Ç–∏–≤–Ω–∏–π: \(.isCurrent)",
         "    –ë–ª–æ–∫–æ–≤–∞–Ω–∏–π: \(.blocked)",
         "    –ü–æ–º–∏–ª–æ–∫: \(.failures)",
         "    –û—Å—Ç–∞–Ω–Ω—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: \(.lastUsed // "–Ω—ñ–∫–æ–ª–∏")",
         ""
        )
      ' || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π"
      sleep 5
    done
    ;;

  test|t)
    echo "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏..."
    echo ""
    echo "1Ô∏è‚É£  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ API..."
    health=$(curl -s http://localhost:4000/health 2>/dev/null)
    if [ -n "$health" ]; then
      echo "‚úÖ API –¥–æ—Å—Ç—É–ø–Ω–µ"
    else
      echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ"
      exit 1
    fi
    echo ""
    
    echo "2Ô∏è‚É£  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Token Rotator..."
    tokens=$(curl -s http://localhost:4000/v1/tokens/stats 2>/dev/null | jq -r '.total_tokens')
    if [ "$tokens" -gt 0 ]; then
      echo "‚úÖ Token Rotator –∞–∫—Ç–∏–≤–Ω–∏–π ($tokens —Ç–æ–∫–µ–Ω—ñ–≤)"
    else
      echo "‚ùå Token Rotator –Ω–µ –ø—Ä–∞—Ü—é—î"
      exit 1
    fi
    echo ""
    
    echo "3Ô∏è‚É£  –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç..."
    response=$(curl -s -X POST http://localhost:4000/v1/chat/completions \
      -H "Content-Type: application/json" \
      -d '{"model":"gpt-4o-mini","messages":[{"role":"user","content":"Hi"}],"max_tokens":5}' \
      2>/dev/null)
    
    if echo "$response" | jq -e '.choices' > /dev/null 2>&1; then
      echo "‚úÖ –ó–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–∏–π"
      echo "$response" | jq -r '.choices[0].message.content'
    else
      error=$(echo "$response" | jq -r '.error.message // "Unknown error"')
      echo "‚ö†Ô∏è  –ü–æ–º–∏–ª–∫–∞: $error"
    fi
    echo ""
    
    echo "‚úÖ –í—Å—ñ —Ç–µ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    ;;

  emergency|em)
    echo "üö® –ê–í–ê–†–Ü–ô–ù–ò–ô –†–ï–ñ–ò–ú"
    echo "=================="
    echo ""
    echo "1. –°–∫–∏–¥–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–∫–µ–Ω—ñ–≤..."
    curl -s -X POST http://localhost:4000/v1/tokens/reset-stats 2>/dev/null > /dev/null
    echo "‚úÖ –ì–æ—Ç–æ–≤–æ"
    echo ""
    
    echo "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–µ—Ä..."
    pm2 restart openai-proxy > /dev/null 2>&1
    sleep 3
    echo "‚úÖ –ì–æ—Ç–æ–≤–æ"
    echo ""
    
    echo "3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É..."
    pm2 status | grep openai-proxy
    echo ""
    
    echo "4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–∫–µ–Ω—ñ–≤:"
    curl -s http://localhost:4000/v1/tokens/stats 2>/dev/null | jq -r '.tokens[] | "  \(.key): –±–ª–æ–∫=\(.blocked), –ø–æ–º–∏–ª–æ–∫=\(.failures)"'
    echo ""
    echo "‚úÖ –ê–≤–∞—Ä—ñ–π–Ω–µ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    ;;

  help|h|*)
    echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 <–∫–æ–º–∞–Ω–¥–∞>"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:"
    echo "  status, s        - –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω—ñ–≤"
    echo "  rotate, r        - –†—É—á–Ω–∞ —Ä–æ—Ç–∞—Ü—ñ—è —Ç–æ–∫–µ–Ω–∞"
    echo "  reset            - –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
    echo "  restart          - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"
    echo "  logs, l [N]      - –ü–æ–∫–∞–∑–∞—Ç–∏ N –æ—Å—Ç–∞–Ω–Ω—ñ—Ö —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—ñ–≤ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 30)"
    echo "  errors, e        - –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏ 429"
    echo "  watch, w         - –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ"
    echo "  test, t          - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç–µ—Å—Ç–∏"
    echo "  emergency, em    - –ê–≤–∞—Ä—ñ–π–Ω–µ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è"
    echo "  help, h          - –¶—è –¥–æ–≤—ñ–¥–∫–∞"
    echo ""
    echo "–ü—Ä–∏–∫–ª–∞–¥–∏:"
    echo "  $0 status        # –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å"
    echo "  $0 rotate        # –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏ —Ç–æ–∫–µ–Ω"
    echo "  $0 logs 50       # –ü–æ–∫–∞–∑–∞—Ç–∏ 50 —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—ñ–≤"
    echo "  $0 watch         # –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ"
    echo "  $0 emergency     # –ê–≤–∞—Ä—ñ–π–Ω–µ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è"
    echo ""
    ;;
esac
