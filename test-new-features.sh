#!/bin/bash

# –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π ATLAS
# –î–∞—Ç–∞: 10 –∂–æ–≤—Ç–Ω—è 2025

echo "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π ATLAS"
echo "=================================="
echo ""

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

BASE_URL="http://localhost:4000"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
check_response() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ –£—Å–ø—ñ—à–Ω–æ${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –ü–æ–º–∏–ª–∫–∞${NC}"
        return 1
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π
echo -e "${BLUE}1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...${NC}"
curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/health" | grep -q "200"
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î${NC}"
else
    echo -e "${RED}‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î${NC}"
    echo "–ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–µ—Ä–≤–µ—Ä: npm start –∞–±–æ node server.js"
    exit 1
fi
echo ""

# –¢–µ—Å—Ç 1: API –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç–æ–∫–µ–Ω—ñ–≤
echo -e "${BLUE}2. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç–æ–∫–µ–Ω—ñ–≤...${NC}"
TOKENS=$(curl -s "$BASE_URL/api/monitoring/tokens")
if echo "$TOKENS" | jq -e '.tokens' > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API —Ç–æ–∫–µ–Ω—ñ–≤ –ø—Ä–∞—Ü—é—î${NC}"
    TOKEN_COUNT=$(echo "$TOKENS" | jq '.total_tokens')
    echo "   –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—ñ–≤: $TOKEN_COUNT"
else
    echo -e "${RED}‚ùå API —Ç–æ–∫–µ–Ω—ñ–≤ –Ω–µ –ø—Ä–∞—Ü—é—î${NC}"
fi
echo ""

# –¢–µ—Å—Ç 2: API –ª–æ–≥—ñ–≤
echo -e "${BLUE}3. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –ª–æ–≥—ñ–≤...${NC}"
LOGS=$(curl -s "$BASE_URL/api/monitoring/logs?limit=5")
if echo "$LOGS" | jq -e '.logs' > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API –ª–æ–≥—ñ–≤ –ø—Ä–∞—Ü—é—î${NC}"
    LOG_COUNT=$(echo "$LOGS" | jq '.total')
    echo "   –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ª–æ–≥—ñ–≤: $LOG_COUNT"
else
    echo -e "${RED}‚ùå API –ª–æ–≥—ñ–≤ –Ω–µ –ø—Ä–∞—Ü—é—î${NC}"
fi
echo ""

# –¢–µ—Å—Ç 3: API –º–æ–¥–µ–ª–µ–π
echo -e "${BLUE}4. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –º–æ–¥–µ–ª–µ–π...${NC}"
MODELS=$(curl -s "$BASE_URL/api/monitoring/models")
if echo "$MODELS" | jq -e '.data' > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API –º–æ–¥–µ–ª–µ–π –ø—Ä–∞—Ü—é—î${NC}"
    MODEL_COUNT=$(echo "$MODELS" | jq '.data | length')
    echo "   –ö—ñ–ª—å–∫—ñ—Å—Ç—å –º–æ–¥–µ–ª–µ–π: $MODEL_COUNT"
else
    echo -e "${RED}‚ùå API –º–æ–¥–µ–ª–µ–π –Ω–µ –ø—Ä–∞—Ü—é—î${NC}"
fi
echo ""

# –¢–µ—Å—Ç 4: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
echo -e "${BLUE}5. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤...${NC}"
echo "   –í—ñ–¥–ø—Ä–∞–≤–∫–∞ 5 —Ç–µ—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å..."
SUCCESS_COUNT=0
for i in {1..5}; do
    RESPONSE=$(curl -s -X POST "$BASE_URL/v1/simple-chat" \
        -H "Content-Type: application/json" \
        -d "{\"model\":\"gpt-4o-mini\",\"message\":\"Test message $i\"}")
    
    if echo "$RESPONSE" | jq -e '.response' > /dev/null 2>&1; then
        SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
        echo -e "   ${GREEN}‚úì${NC} –ó–∞–ø–∏—Ç $i —É—Å–ø—ñ—à–Ω–∏–π"
    else
        echo -e "   ${RED}‚úó${NC} –ó–∞–ø–∏—Ç $i –Ω–µ—É—Å–ø—ñ—à–Ω–∏–π"
    fi
    sleep 0.5
done

echo -e "${GREEN}‚úÖ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: $SUCCESS_COUNT/5${NC}"
echo ""

# –¢–µ—Å—Ç 5: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–≥—ñ–≤
echo -e "${BLUE}6. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–≥—ñ–≤...${NC}"
LOGS_AFTER=$(curl -s "$BASE_URL/api/monitoring/logs?limit=10")
NEW_LOG_COUNT=$(echo "$LOGS_AFTER" | jq '.total')

if [ "$NEW_LOG_COUNT" -gt "$LOG_COUNT" ]; then
    echo -e "${GREEN}‚úÖ –õ–æ–≥–∏ –æ–Ω–æ–≤–ª—é—é—Ç—å—Å—è${NC}"
    echo "   –ù–æ–≤–∏—Ö –ª–æ–≥—ñ–≤: $((NEW_LOG_COUNT - LOG_COUNT))"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –õ–æ–≥–∏ –Ω–µ –æ–Ω–æ–≤–∏–ª–∏—Å—è (–º–æ–∂–ª–∏–≤–æ –≤–∂–µ –±—É–ª–∏)${NC}"
fi
echo ""

# –¢–µ—Å—Ç 6: –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏
echo -e "${BLUE}7. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤...${NC}"

# –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/" | grep -q "200"
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ (/)${NC}"
else
    echo -e "${RED}‚ùå –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
fi

# –ú–æ–Ω—ñ—Ç–æ—Ä
curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/monitor.html" | grep -q "200"
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –ú–æ–Ω—ñ—Ç–æ—Ä (/monitor.html)${NC}"
else
    echo -e "${RED}‚ùå –ú–æ–Ω—ñ—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π${NC}"
fi

echo ""

# –ü—ñ–¥—Å—É–º–æ–∫
echo "=================================="
echo -e "${BLUE}üìä –ü—ñ–¥—Å—É–º–æ–∫ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è${NC}"
echo "=================================="
echo ""
echo "‚úÖ –£—Å—ñ –±–∞–∑–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –ø—Ä–∞—Ü—é—é—Ç—å"
echo ""
echo "üåê –í—ñ–¥–∫—Ä–∏–π—Ç–µ —É –±—Ä–∞—É–∑–µ—Ä—ñ:"
echo "   ‚Ä¢ –ß–∞—Ç –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é: $BASE_URL/"
echo "   ‚Ä¢ –ú–æ–Ω—ñ—Ç–æ—Ä –∑ –≥—Ä–∞—Ñ—ñ–∫–∞–º–∏: $BASE_URL/monitor.html"
echo ""
echo "üìñ –î–æ–∫–ª–∞–¥–Ω—ñ—à–µ:"
echo "   ‚Ä¢ cat –ù–û–íI_–§–£–ù–ö–¶I–á.md"
echo "   ‚Ä¢ cat QUICKSTART_–ù–û–íI_–§–£–ù–ö–¶I–á.md"
echo ""
echo -e "${GREEN}üéâ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
